# base-image for python on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/
FROM balenalib/%%BALENA_MACHINE_NAME%%-python:3-stretch-run

# use `install_packages` if you need to install dependencies,
# for instance if you need git, just uncomment the line below.
# RUN install_packages git
RUN apt-get clean && apt-get update && apt-get install -yq \
	build-essential libffi-dev libssl-dev iperf3 \
    && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Set our working directory
WORKDIR /usr/src/app

# Copy requirements.txt first for better cache on later pushes
COPY requirements.txt requirements.txt

# pip install python deps from requirements.txt on the resin.io build server
RUN pip install -r requirements.txt

# This will copy all files in our root to the working  directory in the container
COPY . ./

# Enable udevd so that plugged dynamic hardware devices show up in our container.
ENV UDEV=1

# main.py will run when container starts up on the device
CMD ["python","-u","src/main.py"]
CMD ["iperf3","-s"]

RUN apt-get update && apt-get upgrade
RUN apt-get install wget
RUN wget https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz && \
	apt-get install -y make build-essential libssl-dev zlib1g-dev \
	libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
	libncurses5-dev libncursesw5-dev xz-utils tk-dev && \
	tar xvf Python-3.7.9.tgz && cd Python-3.7.9 && \
	./configure --enable-optimizations --with-ensurepip=install && \
	make -j 8 && make altinstall
